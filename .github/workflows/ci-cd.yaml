name: CI-CD to EKS

on:
  push:
    branches:
      - master # change if you use another branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -------------------------
      # Checkout latest code
      # -------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # -------------------------
      # Configure AWS credentials
      # -------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Set up eksctl
        run: |
          curl --silent --location "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      # - name: Set up Helm
      #   uses: azure/setup-helm@v4
      #   with:
      #     version: v3.16.2

      # -------------------------
      # Authenticate with EKS
      # -------------------------
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_EKS_CLUSTER_NAME }}

      # -------------------------
      # Login to DockerHub
      # -------------------------
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # -------------------------
      # Login to Amazon ECR
      # -------------------------
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # -------------------------
      # Build and Push Docker image
      # -------------------------

      - name: Build & Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }} # if you use DockerHub

          # IMAGE_NAME=${{secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/mern-frontend # change it to your ECR repository

          IMAGE_TAG=${{ github.sha }}

          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # -------------------------
      # Deploy to EKS
      # -------------------------
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl set image deployment/${{ secrets.DEPLOYMENT_NAME }} ${{ secrets.DOCKER_IMAGE_NAME }}=${IMAGE_NAME}:${IMAGE_TAG} -n ${{ secrets.NAMESPACE_NAME }}
          kubectl rollout status deployment/${{ secrets.DEPLOYMENT_NAME }} -n ${{ secrets.NAMESPACE_NAME }}